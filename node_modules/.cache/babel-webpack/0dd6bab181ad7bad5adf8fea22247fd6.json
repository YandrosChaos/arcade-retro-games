{"ast":null,"code":"import Phaser from 'phaser';\nimport { calculateHalfOfHalf } from '../../commons/functions/responsive.function';\nimport { platformHeight, platformWidth } from '../game-loader.page';\nimport { MENU_MUSIC_VOLUME, SOUND_EFFECTS_VOLUME } from './k-boom.config';\nimport { BACKGROUND_MENU_IMG_PATH, BACKGROUND_MENU_SECTION_NAME, GAME_NAME, GAME_SCENE_NAME, MENU_MUSIC_PATH, MENU_MUSIC_SECTION_NAME, START_SOUND_PATH, START_SOUND_SECTION_NAME, TEXT_BITMAP_FONT_PATH_FNT, TEXT_BITMAP_FONT_PATH_PNG, TEXT_FONT_NAME, TITLE_BITMAP_FONT_PATH_FNT, TITLE_BITMAP_FONT_PATH_PNG, TITLE_FONT_NAME, WELCOME_SCENE_NAME } from './k-boom.routes';\nexport class WelcomeScene extends Phaser.Scene {\n  constructor() {\n    super({\n      key: WELCOME_SCENE_NAME\n    });\n    this.hintText = 'Touch!';\n  }\n\n  preload() {\n    this.load.audio(MENU_MUSIC_SECTION_NAME, MENU_MUSIC_PATH);\n    this.load.audio(START_SOUND_SECTION_NAME, START_SOUND_PATH);\n    this.load.bitmapFont(TITLE_FONT_NAME, TITLE_BITMAP_FONT_PATH_PNG, TITLE_BITMAP_FONT_PATH_FNT);\n    this.load.bitmapFont(TEXT_FONT_NAME, TEXT_BITMAP_FONT_PATH_PNG, TEXT_BITMAP_FONT_PATH_FNT);\n    this.load.image(BACKGROUND_MENU_SECTION_NAME, BACKGROUND_MENU_IMG_PATH);\n  }\n\n  create() {\n    this.startGameSound = this.sound.add(START_SOUND_SECTION_NAME, {\n      volume: SOUND_EFFECTS_VOLUME\n    });\n    this.music = this.sound.add(MENU_MUSIC_SECTION_NAME, {\n      volume: MENU_MUSIC_VOLUME,\n      loop: true\n    });\n    this.music.play();\n    const background = this.add.tileSprite(0, platformHeight, platformWidth * 2, platformHeight * 2, BACKGROUND_MENU_SECTION_NAME);\n    this.title = this.add.bitmapText(calculateHalfOfHalf(platformWidth) / 2.5, calculateHalfOfHalf(platformHeight) - 100, TITLE_FONT_NAME, GAME_NAME, platformWidth / 5);\n    this.input.on('pointerdown', function () {\n      this.startGameSound.play();\n      this.music.destroy();\n      this.scene.start(GAME_SCENE_NAME);\n    }, this);\n  }\n\n  update(time) {\n    var _a;\n\n    const seconds = Number((time / 1000).toFixed(0));\n    (_a = this.hint) === null || _a === void 0 ? void 0 : _a.destroy();\n\n    if (seconds % 2 !== 0) {\n      this.hint = this.add.bitmapText(calculateHalfOfHalf(platformWidth) + 50, platformHeight - 100, TEXT_FONT_NAME, this.hintText, platformWidth / 10);\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}