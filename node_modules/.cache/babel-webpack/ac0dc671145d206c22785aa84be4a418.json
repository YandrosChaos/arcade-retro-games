{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport Phaser from 'phaser';\nimport { platformHeight, platformWidth } from '../game-loader.page';\nimport { GAMEPLAY_MUSIC_VOLUME, SOUND_EFFECTS_VOLUME } from './k-boom.config';\nimport { BACKGROUND_IMG_PATH, BACKGROUND_SECTION_NAME, BOMB_IMG_PATH, BOMB_SECTION_NAME, EXPLOSION_SECTION_NAME, FLOOR_IMG_PATH, GAME_SCENE_NAME, KABOOM_ANIM_NAME, KABOOM_IMG_PATH, FLOOR_SECTION_NAME, SCORE_SCENE_NAME, EXPLOSION_SOUND_SECTION_NAME, EXPLOSION_SOUND_PATH, DEAD_SOUND_PATH, MAIN_GAME_MUSIC_PATH, DEAD_SOUND_SECTION_NAME, MAIN_GAME_MUSIC_SECTION_NAME } from './k-boom.routes';\nexport class GameScene extends Phaser.Scene {\n  constructor() {\n    super({\n      key: GAME_SCENE_NAME\n    });\n  }\n\n  init(params) {\n    this.delta = 1000;\n    this.lastBombTime = 0;\n    this.bombsCaught = 0;\n    this.bombsFallen = 0;\n  }\n\n  preload() {\n    this.load.audio(EXPLOSION_SOUND_SECTION_NAME, EXPLOSION_SOUND_PATH);\n    this.load.audio(DEAD_SOUND_SECTION_NAME, DEAD_SOUND_PATH);\n    this.load.audio(MAIN_GAME_MUSIC_SECTION_NAME, MAIN_GAME_MUSIC_PATH);\n    this.load.image(BOMB_SECTION_NAME, BOMB_IMG_PATH);\n    this.load.image(FLOOR_SECTION_NAME, FLOOR_IMG_PATH);\n    this.load.image(BACKGROUND_SECTION_NAME, BACKGROUND_IMG_PATH);\n    this.load.spritesheet(EXPLOSION_SECTION_NAME, KABOOM_IMG_PATH, {\n      frameWidth: 128,\n      frameHeight: 128\n    });\n  }\n\n  create() {\n    this.music = this.sound.add(MAIN_GAME_MUSIC_SECTION_NAME, {\n      volume: GAMEPLAY_MUSIC_VOLUME,\n      loop: true\n    });\n    this.music.play();\n    this.explosionSound = this.sound.add(EXPLOSION_SOUND_SECTION_NAME, {\n      volume: SOUND_EFFECTS_VOLUME\n    });\n    this.deadSound = this.sound.add(DEAD_SOUND_SECTION_NAME, {\n      volume: SOUND_EFFECTS_VOLUME\n    });\n    const background = this.add.tileSprite(0, platformHeight / 2, platformWidth * 2, platformHeight * 2, BACKGROUND_SECTION_NAME);\n    background.setAngle(90);\n    this.floor = this.physics.add.staticGroup({\n      key: FLOOR_SECTION_NAME,\n      frameQuantity: 2\n    });\n    Phaser.Actions.PlaceOnLine(this.floor.getChildren(), new Phaser.Geom.Line(25, platformHeight - 50, platformWidth + 200, platformHeight - 50));\n    this.floor.refresh();\n    this.info = this.add.text(10, 10, '', {\n      font: '24px Minecraft Bold',\n      color: '#FBFBAC'\n    });\n    this.anims.create({\n      key: KABOOM_ANIM_NAME,\n      frames: this.anims.generateFrameNumbers(EXPLOSION_SECTION_NAME, {\n        start: 0,\n        end: 15\n      }),\n      frameRate: 16,\n      repeat: 0,\n      hideOnComplete: true\n    });\n    this.explosions = this.add.group({\n      defaultKey: EXPLOSION_SECTION_NAME,\n      maxSize: -1\n    });\n  }\n\n  update(time) {\n    const diff = time - this.lastBombTime;\n\n    if (diff > this.delta) {\n      this.lastBombTime = time;\n\n      if (this.delta > 500) {\n        this.delta -= 20;\n      }\n\n      this.emitBomb();\n    }\n\n    this.info.text = this.bombsCaught + ' caught - ' + this.bombsFallen + ' fallen (max 3)';\n  }\n\n  onClick(bomb) {\n    return function () {\n      return __awaiter(this, void 0, void 0, function* () {\n        bomb.setVelocity(0, 0);\n        this.bombsCaught += 1;\n        this.time.delayedCall(100, function (bomb) {\n          return __awaiter(this, void 0, void 0, function* () {\n            this.explosionEffect(bomb);\n            bomb.destroy();\n          });\n        }, [bomb], this);\n      });\n    };\n  }\n\n  onFall(bomb) {\n    return function () {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.bombsFallen += 1;\n        this.time.delayedCall(100, function (bomb) {\n          return __awaiter(this, void 0, void 0, function* () {\n            this.explosionEffect(bomb);\n            bomb.destroy();\n\n            if (this.bombsFallen > 2) {\n              this.gameOver();\n            }\n          });\n        }, [bomb], this);\n      });\n    };\n  }\n\n  emitBomb() {\n    const randomVelocity = Phaser.Math.Between(100, 200);\n    const randomBombWidth = Phaser.Math.FloatBetween(0.12, 0.17);\n    const x = Phaser.Math.Between(25, platformWidth - 25);\n    const y = 25;\n    const bomb = this.physics.add.image(x, y, BOMB_SECTION_NAME);\n    bomb.setAngle(180);\n    bomb.setDisplaySize(platformWidth * randomBombWidth, platformHeight * 0.15);\n    bomb.setVelocity(0, randomVelocity);\n    bomb.setInteractive();\n    bomb.on('pointerdown', this.onClick(bomb), this);\n    this.physics.add.collider(bomb, this.floor, this.onFall(bomb), null, this);\n  }\n\n  gameOver() {\n    this.music.destroy();\n    this.deadSound.play();\n    this.scene.start(SCORE_SCENE_NAME, {\n      bombsCaught: this.bombsCaught\n    });\n  }\n\n  explosionEffect(obj) {\n    const explosion = this.explosions.get().setActive(true);\n    explosion.setOrigin(0.5, 0.5);\n    explosion.x = obj.x;\n    explosion.y = obj.y;\n    this.explosionSound.play();\n    explosion.play(KABOOM_ANIM_NAME);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}